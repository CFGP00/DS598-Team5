{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "team5datafactory"
		},
		"team5service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'team5service'"
		},
		"Alphavantage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.polygon.io/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Alphavantage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Alphavantage_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/team5service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('team5service_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/applestocksource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Alphavantage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "v2/aggs/ticker/AAPL/range/1/day/2020-01-01/2024-12-31?adjusted=true&sort=asc&apiKey=ZvBnOSu8QjKjr5eFdv95gF1pA4pXW24S"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Alphavantage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/historicalstockapple')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "team5service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "appleticker.json",
						"folderPath": "Bronze/Historical Stock",
						"container": "team5container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"url": {
							"type": "string"
						},
						"product_name": {
							"type": "string"
						},
						"product_rating": {
							"type": "number"
						},
						"product_rating_object": {
							"type": "object",
							"properties": {
								"one_star": {
									"type": "integer"
								},
								"two_star": {
									"type": "integer"
								},
								"three_star": {
									"type": "integer"
								},
								"four_star": {
									"type": "integer"
								},
								"five_star": {
									"type": "integer"
								}
							}
						},
						"product_rating_max": {
							"type": "integer"
						},
						"rating": {
							"type": "integer"
						},
						"author_name": {
							"type": "string"
						},
						"asin": {
							"type": "string"
						},
						"product_rating_count": {
							"type": "integer"
						},
						"review_header": {
							"type": "string"
						},
						"review_id": {
							"type": "string"
						},
						"review_text": {
							"type": "string"
						},
						"author_id": {
							"type": "string"
						},
						"author_link": {
							"type": "string"
						},
						"badge": {
							"type": "string"
						},
						"brand": {
							"type": "string"
						},
						"review_posted_date": {
							"type": "string"
						},
						"review_country": {
							"type": "string"
						},
						"helpful_count": {
							"type": "integer"
						},
						"is_amazon_vine": {
							"type": "boolean"
						},
						"is_verified": {
							"type": "boolean"
						},
						"variant_asin": {
							"type": "null"
						},
						"variant_name": {
							"type": "null"
						},
						"videos": {
							"type": "null"
						},
						"timestamp": {
							"type": "string"
						},
						"input": {
							"type": "object",
							"properties": {
								"url": {
									"type": "string"
								}
							}
						},
						"review_images": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/team5service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tickersink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "team5service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Silver/Historical Stock",
						"container": "team5container"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/team5service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tickersource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "team5service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "appleticker.json",
						"folderPath": "Bronze/Historical Stock",
						"container": "team5container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Date": {
							"type": "string"
						},
						"Close/Last": {
							"type": "string"
						},
						"Volume": {
							"type": "integer"
						},
						"Open": {
							"type": "string"
						},
						"High": {
							"type": "string"
						},
						"Low": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/team5service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/News_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "team5service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "apple_news_headlinesCORRECT.json",
						"folderPath": "Bronze/News",
						"container": "team5container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"title": {
							"type": "string"
						},
						"publishedAt": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/team5service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/news_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "team5service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Silver/News",
						"container": "team5container"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/team5service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stockpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copydatastock",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "applestocksource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "historicalstockapple",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/applestocksource')]",
				"[concat(variables('factoryId'), '/datasets/historicalstockapple')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/appleticker_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tickersource",
								"type": "DatasetReference"
							},
							"name": "AppleTicker"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tickersink",
								"type": "DatasetReference"
							},
							"name": "AppleSink"
						}
					],
					"transformations": [
						{
							"name": "RenameColumns"
						},
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Filter"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Date as string,",
						"          {Close/Last} as string,",
						"          Volume as integer,",
						"          Open as string,",
						"          High as string,",
						"          Low as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments',",
						"     wildcardPaths:['Bronze/Historical Stock/appleticker.json']) ~> AppleTicker",
						"AppleTicker select(mapColumn(",
						"          Trade_date = Date,",
						"          Close = {Close/Last},",
						"          Volume,",
						"          Open,",
						"          High,",
						"          Low",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns",
						"RenameColumns derive(Open = toFloat(replace(trim(Open), \"$\", \"\")),",
						"          High = toFloat(replace(trim(High), \"$\", \"\")),",
						"          Low = toFloat(replace(trim(Low), \"$\", \"\")),",
						"          Close = toFloat(replace(trim(Close), \"$\", \"\")),",
						"          Volume = toInteger(Volume),",
						"          Trade_date = toDate(trim(Trade_date), 'MM/dd/yyyy'),",
						"          Year = year(toDate(trim(Trade_date), 'MM/dd/yyyy')),",
						"          Month = month(toDate(trim(Trade_date), 'MM/dd/yyyy'))) ~> DerivedColumns",
						"DerivedColumns filter(isNull(Trade_date) == false() && isNull(Close) == false() && Close > 0) ~> Filter",
						"Filter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AppleSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tickersource')]",
				"[concat(variables('factoryId'), '/datasets/tickersink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/news_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "News_Source",
								"type": "DatasetReference"
							},
							"name": "newssilver",
							"description": "This is unrolling our news json into "
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "news_silver",
								"type": "DatasetReference"
							},
							"name": "silver",
							"description": "going to silver!"
						}
					],
					"transformations": [
						{
							"name": "RenamingColumns"
						},
						{
							"name": "ReformattingDate"
						},
						{
							"name": "DateToDay",
							"description": "get date up to the day"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          title as string,",
						"          publishedAt as string,",
						"          url as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> newssilver",
						"newssilver derive(date_released = publishedAt) ~> RenamingColumns",
						"RenamingColumns derive(date_released = toTimestamp(publishedAt, 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'')) ~> ReformattingDate",
						"ReformattingDate derive(date_released = toDate(toTimestamp(publishedAt, 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\''))",
						") ~> DateToDay",
						"DateToDay select(mapColumn(",
						"          title,",
						"          url,",
						"          date_released",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> silver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/News_Source')]",
				"[concat(variables('factoryId'), '/datasets/news_silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ticker_dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "appleticker_dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "appleticker_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AppleTicker": {},
									"AppleSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/appleticker_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/news_dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "News_Bronze_To_Silver",
						"description": "Standardized date",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "news_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"newssilver": {},
									"silver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/news_dataflow')]"
			]
		}
	]
}