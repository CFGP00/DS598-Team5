{
	"name": "news_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "News_Source",
						"type": "DatasetReference"
					},
					"name": "newssilver",
					"description": "This is unrolling our news json into "
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "news_silver",
						"type": "DatasetReference"
					},
					"name": "silver",
					"description": "going to silver!"
				}
			],
			"transformations": [
				{
					"name": "RenamingColumns"
				},
				{
					"name": "ReformattingDate"
				},
				{
					"name": "DateToDay",
					"description": "get date up to the day"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          title as string,",
				"          publishedAt as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> newssilver",
				"newssilver derive(date_released = publishedAt) ~> RenamingColumns",
				"RenamingColumns derive(date_released = toTimestamp(publishedAt, 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'')) ~> ReformattingDate",
				"ReformattingDate derive(date_released = toDate(toTimestamp(publishedAt, 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\''))) ~> DateToDay",
				"DateToDay select(mapColumn(",
				"          title,",
				"          url,",
				"          date_released",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> silver"
			]
		}
	}
}